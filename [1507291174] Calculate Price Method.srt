1
00:00:00,210 --> 00:00:04,370
之前  我们看到可以向display方法传递一个整形参数
Earlier, we saw that we could pass a number into the display method.

2
00:00:04,370 --> 00:00:08,350
接下来我们进一步聊聊方法的输入和输出的不同
Let's talk more about the different inputs and output of a method.

3
00:00:08,350 --> 00:00:12,510
我们来看一下MainActivity里的submitOrder方法
Let's look at the submitOrder method in the MainActivity as an example.

4
00:00:12,510 --> 00:00:15,000
比如在这个方法中你有一堆代码
Say you have a bunch of lines of code in that method.

5
00:00:15,000 --> 00:00:16,670
当用户点击Order按钮的时候
When the user clicks on the Order button,

6
00:00:16,670 --> 00:00:19,330
按钮会触发这个submitOrder方法
it will trigger this submitOrder method to be called.

7
00:00:19,330 --> 00:00:23,200
Android设备会将这些指令从头到尾运行一遍
The Android device will execute each of these instructions from top to bottom,

8
00:00:23,200 --> 00:00:26,980
当它调用calculatePrice方法时  它会
and when it hits the calculatePrice method call it will

9
00:00:26,980 --> 00:00:30,400
跳到calculatePrice方法被定义的地方
jump over to where the calculatePrice method is defined.

10
00:00:30,400 --> 00:00:33,830
比如这个方法被定义在MainActivity文件的结尾
Say that this is defined at the bottom of the MainActivity file.

11
00:00:33,830 --> 00:00:37,020
Android设备会从头到尾运行每一句指令
The Android device will execute each of these instructions from top to bottom of

12
00:00:37,020 --> 00:00:41,270
然后它会自动跳回submitOrder方法
the method, and then it will jump back to the submitOrder method.

13
00:00:41,270 --> 00:00:44,340
然后  它会继续运行指令直到
Then, it will continue executing these instructions until it hits the end

14
00:00:44,340 --> 00:00:45,268
方法的结尾
of the method.

15
00:00:45,268 --> 00:00:47,240
当calculatePrice方法被调用的时候
When the calculatePrice method is called,

16
00:00:47,240 --> 00:00:49,510
我们可以传递一堆输入参数
we can pass a bunch of inputs over so

17
00:00:49,510 --> 00:00:53,620
这样当我们运行这些代码的时候  我们可以使用这些输入数据
that when we're executing these lines of code, we can use these input values.

18
00:00:53,620 --> 00:00:55,070

As a result of this method,

19
00:00:55,070 --> 00:00:58,940
we can pass a single output value back to the caller.

20
00:00:58,940 --> 00:01:03,030
That way, the output value can be used in the subsequent lines of code.

21
00:01:03,030 --> 00:01:07,090
In Java, we call the inputs to a method input parameters, and

22
00:01:07,090 --> 00:01:10,550
we can have zero or more input parameters.

23
00:01:10,550 --> 00:01:13,370
In Java, we call the output a return value,

24
00:01:13,370 --> 00:01:16,470
and we can have zero or one return value.

25
00:01:16,470 --> 00:01:20,420
An example of an input parameter is passing the quantity

26
00:01:20,420 --> 00:01:22,840
over to the calculatePrice method.

27
00:01:22,840 --> 00:01:26,957
That way, this method can use the quantity to figure out the total price

28
00:01:26,957 --> 00:01:28,130
of the whole order.

29
00:01:28,130 --> 00:01:31,350
Then, we can pass that total price back as a return value.

30
00:01:31,350 --> 00:01:34,046
And then in the submitOrder method, down here,

31
00:01:34,046 --> 00:01:38,253
we can use this total price to do other things, like display it onscreen, or

32
00:01:38,253 --> 00:01:40,930
create receipt, or anything like that.

33
00:01:40,930 --> 00:01:43,730
So to summarize, this is where we define the calculatePrice method, and

34
00:01:43,730 --> 00:01:45,400
this is where we call it.

35
00:01:45,400 --> 00:01:49,490
We want to create a method to calculate the price of a coffee order.

36
00:01:49,490 --> 00:01:53,410
Currently, we calculate the price directly in the submitOrder method, but

37
00:01:53,410 --> 00:01:57,020
the logic to calculate the price is going to get a little more complicated.

38
00:01:57,020 --> 00:01:59,030
So let's move it into its own method.

39
00:01:59,030 --> 00:02:01,948
Then we can call it as many times as we want without copying and

40
00:02:01,948 --> 00:02:04,080
pasting the code everywhere.

41
00:02:04,080 --> 00:02:07,730
As you gain more experience in Android development, you'll gain better judgment

42
00:02:07,730 --> 00:02:11,850
on when to create a new method for something or when you don't need to.

43
00:02:11,850 --> 00:02:14,690
This will just come with more experience and more time.

44
00:02:14,690 --> 00:02:17,640
So, this is the first time we're going to be creating

45
00:02:17,640 --> 00:02:20,800
a new method in the MainActivity on our own.

46
00:02:20,800 --> 00:02:24,575
Instead of starting by writing it from scratch, we want to start by learning to

47
00:02:24,575 --> 00:02:28,460
recognize what is a correct method by reading some code snippets.

48
00:02:28,460 --> 00:02:31,700
So in the instructor notes, we're going to provide you three options.

49
00:02:31,700 --> 00:02:35,830
Read over these three code snippets and determine which

50
00:02:35,830 --> 00:02:40,330
option correctly implements the method to calculate the price of the order.

51
00:02:40,330 --> 00:02:42,330
When you click on the link in the instructor notes,

52
00:02:42,330 --> 00:02:48,380
you'll see this just has code for options A, B, and C.

53
00:02:48,380 --> 00:02:49,290
The goal here is for

54
00:02:49,290 --> 00:02:53,360
you to become comfortable with reading code that you've never seen before.

55
00:02:53,360 --> 00:02:57,370
We haven't gone over the exact rules for what makes a valid method, but

56
00:02:57,370 --> 00:03:02,630
I want you to make your best guess on which option you think is most correct.

57
00:03:02,630 --> 00:03:05,091
I also encourage you to Google search for

58
00:03:05,091 --> 00:03:09,140
more information on how to define Java methods.

59
00:03:09,140 --> 00:03:11,450
As you click through the different search results,

60
00:03:11,450 --> 00:03:15,100
you'll come across information in the documentation that you don't understand.

61
00:03:15,100 --> 00:03:18,290
But I want you to become comfortable with not understanding everything on

62
00:03:18,290 --> 00:03:21,950
those pages, because it's perfectly normal to not understand everything.

63
00:03:21,950 --> 00:03:25,780
All you need to do is just skim the articles for what you understand and

64
00:03:25,780 --> 00:03:29,140
what you think is relevant to the problem at hand.

65
00:03:29,140 --> 00:03:30,610
So, go ahead and read the code for

66
00:03:30,610 --> 00:03:34,260
these three options, look up some information online, and then make your

67
00:03:34,260 --> 00:03:34,265
best guest on how to correctly define the calculatePrice method.

